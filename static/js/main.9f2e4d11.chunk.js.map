{"version":3,"sources":["data/pages.ts","data/errors.tsx","navform/NavForm.tsx","page/Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["pages","default","title","image","audio","process","background","foreground","textColor","uwu","mainthread","thicc","cat","pageNames","Object","keys","createErrorGenerator","errors","target","href","Math","floor","random","length","errorGenerator","NavForm","props","page","navigate","useNavigate","useState","newPageName","setNewPageName","showError","setShowError","errorMessage","setErrorMessage","handleNewPageNameChange","useCallback","e","value","handleSubmit","event","preventDefault","sanitizedPageName","toLowerCase","replace","window","scrollTo","location","reload","next","className","onSubmit","style","backgroundColor","color","id","type","onChange","borderColor","Page","isPlaying","setPlaying","audioRef","useRef","togglePlaying","useEffect","document","current","play","pause","ref","loop","src","alt","onClick","App","map","name","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f2e4d11.chunk.js","sourcesContent":["export const pages = {\r\n  default: {\r\n    title: \"SLP Makes me sad...\",\r\n    image: \"https://gruss.cc/portrait_small.jpg\",\r\n    audio: `${process.env.PUBLIC_URL}/music/os.mp3`,\r\n    background: \"white\",\r\n    foreground: \"grey\",\r\n    textColor: \"black\",\r\n  },\r\n  uwu: {\r\n    title: \"Daniel is kinda cute\",\r\n    image: `${process.env.PUBLIC_URL}/images/uwu.jpg`,\r\n    audio: `${process.env.PUBLIC_URL}/music/uwu.mp3`,\r\n    background: \"pink\",\r\n    foreground: \"white\",\r\n    textColor: \"black\",\r\n  },\r\n  mainthread: {\r\n    title: \"Seriously, there isn't\",\r\n    image: `${process.env.PUBLIC_URL}/images/matrix.jpg`,\r\n    audio: `${process.env.PUBLIC_URL}/music/os.mp3`,\r\n    background: \"black\",\r\n    foreground: \"#ffffff20\",\r\n    textColor: \"lime\",\r\n  },\r\n  thicc: {\r\n    title: \"That chin tho\",\r\n    image: `${process.env.PUBLIC_URL}/images/thicc.png`,\r\n    audio: `${process.env.PUBLIC_URL}/music/os.mp3`,\r\n    background: \"white\",\r\n    foreground: \"grey\",\r\n    textColor: \"black\",\r\n  },\r\n  cat: {\r\n    title: \"Send cat pics\",\r\n    image: `${process.env.PUBLIC_URL}/images/cat.jpg`,\r\n    audio: `${process.env.PUBLIC_URL}/music/os.mp3`,\r\n    background: \"coral\",\r\n    foreground: \"white\",\r\n    textColor: \"black\",\r\n  },\r\n} as const;\r\n\r\nexport type PageName = keyof typeof pages;\r\nexport const pageNames = Object.keys(pages) as PageName[];\r\n\r\nexport const isPageName = (\r\n  potentialPageName: string\r\n): potentialPageName is PageName => {\r\n  return potentialPageName in pages;\r\n};\r\n\r\nexport const sanitizePageName = (pageName: string): PageName =>\r\n  pageName.toLowerCase().replace(/[- .]/g, \"\") as PageName;\r\n","const errors = [\r\n  \"This destination does not exist\",\r\n  \"Have you actually thought about this before typing random things?\",\r\n  \"-1 coin\",\r\n  \"Maybe read the manpages?\",\r\n  \"Use your brain!\",\r\n  \"Why not ask a tutor for help?\",\r\n  <span>\r\n    Here is a{\" \"}\r\n    <a target=\"_newtab\" href=\"https://youtu.be/dQw4w9WgXcQ\">\r\n      HINT\r\n    </a>\r\n  </span>,\r\n];\r\n\r\nfunction* createErrorGenerator() {\r\n  yield errors[0];\r\n\r\n  while (true) {\r\n    yield errors[Math.floor(Math.random() * errors.length)];\r\n  }\r\n}\r\n\r\nconst errorGenerator = createErrorGenerator();\r\n\r\nexport const getRandomError = () =>\r\n  errorGenerator.next().value as string | JSX.Element;\r\n","import { useState, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getRandomError } from \"../data/errors\";\r\nimport { isPageName, PageName, pages, sanitizePageName } from \"../data/pages\";\r\nimport \"./NavForm.css\";\r\n\r\ntype Props = {\r\n  page: PageName;\r\n};\r\n\r\nexport const NavForm = (props: Props) => {\r\n  const { foreground, textColor } = pages[props.page];\r\n  const navigate = useNavigate();\r\n  const [newPageName, setNewPageName] = useState(\"\");\r\n  const [showError, setShowError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState<string | JSX.Element>(\"\");\r\n\r\n  const handleNewPageNameChange = useCallback((e) => {\r\n    setNewPageName(e.target.value);\r\n    setShowError(false);\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      const sanitizedPageName = sanitizePageName(newPageName);\r\n      if (isPageName(sanitizedPageName)) {\r\n        navigate(`../${sanitizedPageName}`);\r\n        window.scrollTo(0, 0);\r\n        window.location.reload();\r\n      } else {\r\n        setErrorMessage(getRandomError());\r\n        setShowError(true);\r\n      }\r\n    },\r\n    [navigate, newPageName]\r\n  );\r\n\r\n  return (\r\n    <form className=\"page-form\" onSubmit={handleSubmit}>\r\n      <div\r\n        className=\"page-formbox\"\r\n        style={{ backgroundColor: foreground, color: textColor }}\r\n      >\r\n        <span id=\"destination-input-label\">Where do you want to go?</span>\r\n        <br />\r\n        <input\r\n          aria-labelledby=\"destination-input-label\"\r\n          type=\"text\"\r\n          value={newPageName}\r\n          onChange={handleNewPageNameChange}\r\n          style={{ borderColor: textColor }}\r\n        />\r\n      </div>\r\n\r\n      <span className={`page-warning ${showError ? \"visible\" : \"\"}`}>\r\n        {errorMessage}\r\n      </span>\r\n    </form>\r\n  );\r\n};\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { PageName, pages } from \"../data/pages\";\r\nimport { NavForm } from \"../navform/NavForm\";\r\nimport \"./Page.css\";\r\n\r\ntype Props = {\r\n  page: PageName;\r\n};\r\n\r\nexport const Page = ({ page }: Props) => {\r\n  const { title, image, audio, background } = pages[page];\r\n\r\n  const [isPlaying, setPlaying] = useState(false);\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const togglePlaying = useCallback(() => {\r\n    setPlaying(!isPlaying);\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioRef.current?.play();\r\n    } else {\r\n      audioRef.current?.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  return (\r\n    <>\r\n      <audio className=\"page-audio\" ref={audioRef} loop>\r\n        <source src={audio} type=\"audio/mpeg\" />\r\n      </audio>\r\n      <div className=\"page\" style={{ background }}>\r\n        <div className=\"page-image-wrapper\">\r\n          <img\r\n            className={`page-image ${isPlaying ? \"spinning\" : \"\"}`}\r\n            src={image}\r\n            alt=\"The one and only\"\r\n            onClick={togglePlaying}\r\n          />\r\n        </div>\r\n        <NavForm page={page} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { pageNames } from \"./data/pages\";\nimport { Page } from \"./page/Page\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <Routes>\n        {pageNames.map((name) => (\n          <Route key={name} path={name} element={<Page page={name} />} />\n        ))}\n        <Route path=\"/\" element={<Page page=\"default\" />} />\n      </Routes>\n    </Router>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nSentry.init({\n  dsn: \"https://ec58c8be2ea541319e0b8f7409f3358b@o1081200.ingest.sentry.io/6088314\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}